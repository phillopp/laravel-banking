stages:
  - test
  - publish

# cache:
#   paths:
#     - vendor/

# Run our tests
# If Xdebug was installed you can generate a coverage report and see code coverage metrics.
test:
  image: php:latest
  stage: test
  script:
    - apt-get update -yqq
    - apt-get install -yqq git libpq-dev libcurl4-gnutls-dev libicu-dev libvpx-dev libjpeg-dev libpng-dev libxpm-dev zlib1g-dev libfreetype6-dev libxml2-dev libexpat1-dev libbz2-dev libgmp3-dev libldap2-dev unixodbc-dev libsqlite3-dev libaspell-dev libsnmp-dev libpcre3-dev libtidy-dev libonig-dev libzip-dev
    # Install PHP extensions
    - docker-php-ext-install mbstring curl intl gd xml zip bz2 opcache
    # Install & enable Xdebug for code coverage reports
    - pecl install xdebug
    - docker-php-ext-enable xdebug
    # Install and run Composer
    - curl -sS https://getcomposer.org/installer | php
    - php composer.phar install
    - php composer.phar tests

publish:
  image: curlimages/curl:latest
  stage: publish
  variables:
    URL: "$CI_SERVER_PROTOCOL://$CI_SERVER_HOST:$CI_SERVER_PORT/api/v4/projects/$CI_PROJECT_ID/packages/composer?job_token=$CI_JOB_TOKEN"
  script:
    - version=$([[ -z "$CI_COMMIT_TAG" ]] && echo "branch=$CI_COMMIT_REF_NAME" || echo "tag=$CI_COMMIT_TAG")
    - insecure=$([ "$CI_SERVER_PROTOCOL" = "http" ] && echo "--insecure" || echo "")
    - response=$(curl -s -w "\n%{http_code}" $insecure --data $version $URL)
    - code=$(echo "$response" | tail -n 1)
    - body=$(echo "$response" | head -n 1)
    # Output state information
    - if [ $code -eq 201 ]; then
        echo "Package created - Code $code - $body";
      else
        echo "Could not create package - Code $code - $body";
        exit 1;
      fi
